function solution(k, score) {
  const answer = [];
  let result = [];

  for(let i = 0; i < score.length; i++){
      result.push(score[i]);
      result = result.sort((a, b) => b - a);

      const index = result.length < k ? result.length - 1 : k - 1;
      answer.push(result[index]);
  }

  return answer;
}

// 테스트 1 〉	통과 (0.15ms, 32.6MB)
// 테스트 2 〉	통과 (0.15ms, 33.6MB)
// 테스트 3 〉	통과 (0.07ms, 33.5MB)
// 테스트 4 〉	통과 (0.09ms, 33.6MB)
// 테스트 5 〉	통과 (0.17ms, 33.6MB)
// 테스트 6 〉	통과 (0.07ms, 33.6MB)
// 테스트 7 〉	통과 (0.18ms, 32.6MB)
// 테스트 8 〉	통과 (0.18ms, 32.7MB)
// 테스트 9 〉	통과 (0.18ms, 33.6MB)
// 테스트 10 〉	통과 (0.22ms, 32.7MB)
// 테스트 11 〉	통과 (0.20ms, 32.7MB)
// 테스트 12 〉	통과 (4.13ms, 36.4MB)
// 테스트 13 〉	통과 (7.02ms, 36.5MB)
// 테스트 14 〉	통과 (5.78ms, 36.6MB)
// 테스트 15 〉	통과 (12.91ms, 35.7MB)
// 테스트 16 〉	통과 (12.78ms, 36.7MB)
// 테스트 17 〉	통과 (12.50ms, 35.7MB)
// 테스트 18 〉	통과 (13.01ms, 36.7MB)
// 테스트 19 〉	통과 (22.20ms, 36.7MB)
// 테스트 20 〉	통과 (14.47ms, 36.7MB)
// 테스트 21 〉	통과 (13.18ms, 36.8MB)
// 테스트 22 〉	통과 (16.25ms, 36.8MB)
// 테스트 23 〉	통과 (23.03ms, 36.7MB)
// 테스트 24 〉	통과 (15.48ms, 36.7MB)
// 테스트 25 〉	통과 (18.60ms, 35.9MB)
// 테스트 26 〉	통과 (0.09ms, 33.5MB)

// 다른 사람의 풀이(reduce, stack 자료구조 활용).
function solution (k, score){
  const stack = [];
  return score.reduce((a, c) => {
    if(stack.length < k){
      stack.push(c);
      stack.sort((a, b) => a - b);
    }else{
      stack.push(c);
      stack.sort((a, b) => a - b);
      stack.shift() // k 아래로 다 잘라내기
    }
    a.push(stack[0]);
    return a;
  }, [])
}

// 빠르당..
// 테스트 1 〉	통과 (0.08ms, 33.4MB)
// 테스트 2 〉	통과 (0.10ms, 33.5MB)
// 테스트 3 〉	통과 (0.08ms, 33.4MB)
// 테스트 4 〉	통과 (0.08ms, 33.4MB)
// 테스트 5 〉	통과 (0.19ms, 33.5MB)
// 테스트 6 〉	통과 (0.08ms, 33.5MB)
// 테스트 7 〉	통과 (0.19ms, 33.5MB)
// 테스트 8 〉	통과 (0.18ms, 33.4MB)
// 테스트 9 〉	통과 (0.18ms, 33.5MB)
// 테스트 10 〉	통과 (0.23ms, 33.5MB)
// 테스트 11 〉	통과 (0.21ms, 33.5MB)
// 테스트 12 〉	통과 (2.08ms, 34.5MB)
// 테스트 13 〉	통과 (2.11ms, 34.5MB)
// 테스트 14 〉	통과 (2.88ms, 34.3MB)
// 테스트 15 〉	통과 (4.01ms, 36.6MB)
// 테스트 16 〉	통과 (5.25ms, 36.6MB)
// 테스트 17 〉	통과 (4.35ms, 36.7MB)
// 테스트 18 〉	통과 (4.35ms, 36.7MB)
// 테스트 19 〉	통과 (0.95ms, 34.4MB)
// 테스트 20 〉	통과 (0.96ms, 34.5MB)
// 테스트 21 〉	통과 (1.59ms, 34.4MB)
// 테스트 22 〉	통과 (1.68ms, 34.5MB)
// 테스트 23 〉	통과 (1.13ms, 34.5MB)
// 테스트 24 〉	통과 (1.15ms, 34.4MB)
// 테스트 25 〉	통과 (1.37ms, 34.4MB)
// 테스트 26 〉	통과 (0.09ms, 33.5MB)